{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","listVisible","setListVisible","visibleGoods","setVisibleGoods","className","type","onClick","map","good","currentName","findIndex","name","reverse","sort","a","b","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"yOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4FaC,EAzFO,WACpB,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,GAAD,OAAKF,IAArD,mBAAOK,EAAP,KAAqBC,EAArB,KAMA,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,WACIJ,GACA,wBACEI,UAAU,4BACVC,KAAK,SACLC,QAAS,kBAAML,GAAgBD,IAHjC,mBASDA,GACC,sBAAKI,UAAU,qBAAf,UACE,oBAAIA,UAAU,aAAd,oBAEA,oBACEA,UAAU,YADZ,SAGGF,EAAaK,KAAI,SAAAC,GAAI,OACpB,oBACEJ,UAAU,iBADZ,oBAzBWK,EA6BWD,EA5BlCX,EAAgBa,WAAU,SAAAC,GAAI,OAAIA,IAASF,KA4BD,GAJ9B,cAIqCD,IAF9BA,GA3BG,IAACC,OAkCf,wBACEL,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAOH,EACd,YAAID,GAAcU,YAJtB,qBASA,wBACER,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAOH,EACd,YAAID,GAAcW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,QAJrD,iCASA,wBACEX,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAOH,EACd,YAAID,GAAcW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,YAJlD,4BAUA,wBACEb,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAMH,EAAgB,GAAD,OAAKN,KAHrC,mBAOCG,GACC,wBACEI,UAAU,mBACVC,KAAK,SACLC,QAAS,kBAAML,GAAgBD,IAHjC,gCCtFdkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.75470d9d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [listVisible, setListVisible] = useState(false);\n  const [visibleGoods, setVisibleGoods] = useState([...goodsFromServer]);\n\n  const findIndexOfName = (currentName: string): number => (\n    goodsFromServer.findIndex(name => name === currentName)\n  );\n\n  return (\n    <div className=\"conteiner\">\n      <div className=\"app\">\n        {!listVisible && (\n          <button\n            className=\"button is-danger is-large\"\n            type=\"button\"\n            onClick={() => setListVisible(!listVisible)}\n          >\n            Start\n          </button>\n        )}\n\n        {listVisible && (\n          <div className=\"app__listConteiner\">\n            <h1 className=\"app__title\">Goods:</h1>\n\n            <ul\n              className=\"app__list\"\n            >\n              {visibleGoods.map(good => (\n                <li\n                  className=\"app__list-item\"\n                  key={good}\n                >\n                  {`${findIndexOfName(good) + 1} - ${good}`}\n                </li>\n              ))}\n            </ul>\n\n            <button\n              className=\"button is-primary\"\n              type=\"button\"\n              onClick={() => (setVisibleGoods(\n                [...visibleGoods].reverse(),\n              ))}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"button is-primary\"\n              type=\"button\"\n              onClick={() => (setVisibleGoods(\n                [...visibleGoods].sort((a, b) => a.localeCompare(b)),\n              ))}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              className=\"button is-primary\"\n              type=\"button\"\n              onClick={() => (setVisibleGoods(\n                [...visibleGoods].sort((a, b) => a.length - b.length),\n              ))}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"button is-warning\"\n              type=\"button\"\n              onClick={() => setVisibleGoods([...goodsFromServer])}\n            >\n              Reset\n            </button>\n            {listVisible && (\n              <button\n                className=\"button is-danger\"\n                type=\"button\"\n                onClick={() => setListVisible(!listVisible)}\n              >\n                Hide list\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}